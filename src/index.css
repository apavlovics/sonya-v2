@import 'fonts.css';

/* Custom properties */

:root {
  --white: 255, 255, 255;
  --black: 0, 0, 0;
  --gray: 90, 90, 90;
  --light-gray: 244, 244, 244; /* Same as spinner background color of pure-react-carousel */
  --green: 137, 151, 75;
  --light-green: 196, 203, 165;

  --sans-serif-font-family: 'Josefin Sans', Helvetica, Arial, sans-serif;
  --serif-font-family: 'EB Garamond', Times, 'Times New Roman', serif;

  --smaller-font-size: 14px;
  --normal-font-size: 22px;
  --larger-font-size: 32px;
  --large-font-size: 44px;

  --normal-font-weight: 400;
  --bold-font-weight: 700;

  --uppercase-letter-spacing: 1px;

  --default-max-width: 960px;
  --default-spacing: 18px;
  --default-icon-size: 32px;

  --positive-animation-height: var(--default-spacing);
  --negative-animation-height: calc(0px - var(--default-spacing));

  --min-opacity: .15;
  --mid-opacity: .5;
  --max-opacity: .7;

  --min-transition-duration: .1s;
  --mid-transition-duration: .2s;
  --max-transition-duration: .5s;

  /* 3:2 is the standard aspect ratio for Canon EOS series */
  --aspect-ratio: 1.5;

  --border: 1px solid;

  --nav-height: calc(4.7 * var(--smaller-font-size));

  --item-padding: .5em;
  --item-position: calc(0em - var(--item-padding));

  --focus-box-shadow: 0 0 0 2px rgba(var(--green), var(--max-opacity));
}

/* General */
/* TODO Consider splitting into components */

* {
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--serif-font-family);
  font-size: var(--normal-font-size);
  font-weight: var(--normal-font-weight);

  /* Disable automatic text scaling on iOS */
  -webkit-text-size-adjust: 100%;
}

a {
  --link-color: var(--green);

  color: rgb(var(--link-color));
  border-bottom: var(--border);
  border-color: rgba(var(--link-color), var(--min-opacity));
  text-decoration: none;
  transition-duration: var(--max-transition-duration);
}

a:hover, a:focus {
  --link-color: var(--green);

  background-color: rgba(var(--link-color), var(--min-opacity));
  transition-duration: var(--min-transition-duration);
  outline: none;
}

p {
  padding-bottom: .5em;
}

h1 {
  padding-top: 2em;
  padding-bottom: .3em;
  font-family: var(--sans-serif-font-family);
  font-size: var(--large-font-size);
  font-weight: var(--bold-font-weight);
}

em {
  font-style: italic;
}

strong {
  font-weight: var(--bold-font-weight);
}

nav > div, main, footer {
  margin: 0 auto 0;
  max-width: var(--default-max-width);
}

main {
  margin-top: var(--nav-height);
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
}

.no-scroll {
  overflow: hidden;
}

.no-wrap {
  white-space: nowrap;
}

.error-mode {
  background-color: rgb(var(--light-gray));
}

.lazy-load-image-background {
  /* Force override inline-block to inline-flex, this fixes UI glitches */
  display: inline-flex !important;
}

/* AnimatedSwitch transitions */

.route-appear-active,
.route-enter-active {
  transition-duration: var(--mid-transition-duration);
}

.route-appear,
.route-enter {
  opacity: 0;
  transform: translateY(var(--negative-animation-height));
}

.route-appear-active,
.route-enter-active {
  opacity: 1;
  transform: translateY(0);
}

/* Navigation */

nav {
  --menu-padding: 1.5em;

  position: fixed;
  top: 0;
  z-index: 10;
  background-color: rgba(var(--white), .95);
  width: 100%;
  height: var(--nav-height);
  font-family: var(--sans-serif-font-family);
  font-size: var(--smaller-font-size);
  line-height: 2;
  letter-spacing: var(--uppercase-letter-spacing);
  text-transform: uppercase;
  overflow: hidden;
  cursor: default;
  box-shadow: 0 0 20px rgba(var(--gray), var(--min-opacity));
}

nav a {
  --link-color: var(--black);

  border: none;
}

nav a:hover, nav a:focus {
  background: none;
}

nav a div span {
  border-bottom: var(--border);
  border-color: rgba(var(--link-color), var(--min-opacity));
}

nav, .main-menu, .language-menu {
  transition-duration: var(--mid-transition-duration);
}

nav > div, .logo, .main-menu, .language-menu {
  display: flex;
  flex-flow: row nowrap;
}

nav.hidden {
  opacity: 0;
  pointer-events: none;
  transform: translateY(-100%);
  transition-duration: 0s;
}

.logo {
  justify-content: space-between;
  align-items: center;
  font-weight: var(--bold-font-weight);
  white-space: nowrap;
}

/* Do not highlight logo on hover, but still highlight on focus */
.logo a:hover {
  --link-color: var(--black);
}

.logo div {
  margin: auto 0;
  padding: var(--menu-padding) var(--menu-padding) var(--menu-padding) 0;
}

.logo svg {
  display: none;
  width: var(--default-icon-size);
  height: var(--default-icon-size);
  padding: var(--item-padding);
  position: relative;
  right: var(--item-position);
  fill: rgb(var(--black));
  cursor: pointer;
}

.main-menu {
  width: 100%;
  list-style: none;
}

.main-menu li div {
  margin: auto 0;
  padding: var(--menu-padding);
}

.language-menu {
  list-style: none;
}

.language-menu li div {
  position: relative;
  right: var(--item-position);
  margin: auto 0;
  padding: var(--menu-padding) var(--item-padding) var(--smaller-font-size);
}

.selected {
  color: rgb(var(--green));
}

/* Footer */

footer, .social {
  display: flex;
  align-items: flex-start;
}

footer {
  flex-flow: column nowrap;
  color: rgb(var(--gray));
  padding-top: 1em;
  padding-bottom: 3em;
}

.social {
  flex-flow: row nowrap;
  padding-top: var(--item-padding);
  position: relative;
  left: var(--item-position);
}

.social a {
  border: none;
  background: none;
  fill: rgb(var(--light-green));
}

.social a:hover, .social a:focus {
  fill: rgb(var(--green));
}

.social svg {
  width: var(--default-icon-size);
  height: var(--default-icon-size);
  padding: var(--item-padding);
}

/* Previews */

main.previews {
  /* Determines the maximum width of previews, set to 100vw for the full viewport width */
  --previews-max-width: 150vh;

  flex-flow: row wrap;
  max-width: var(--previews-max-width);
  font-family: var(--sans-serif-font-family);
  letter-spacing: var(--uppercase-letter-spacing);
  text-transform: uppercase;
}

.preview.large {
  --max-width: var(--previews-max-width);
}

.preview.medium {
  --max-width: calc((var(--previews-max-width) - var(--default-spacing)) / 2);
}

.preview.large, .preview.medium {
  position: relative;
  margin-bottom: var(--default-spacing);
  overflow: hidden;
  transition-duration: var(--max-transition-duration);
}

.preview a {
  display: flex;
  flex-flow: column nowrap;
  width: 100%;
  height: 100%;
}

.preview a:hover, .preview a:focus {
  background: none;
}

.preview a::after {
  display: block;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  content: '';
  transition-duration: var(--max-transition-duration);
}

.preview a:focus::after {
  box-shadow: inset var(--focus-box-shadow);
  transition-duration: var(--min-transition-duration);
}

.preview .placeholder-wrapper {
  display: flex;
  background-color: rgb(var(--light-gray));
}

.preview .placeholder {
  width: 100vw;
  height: calc(100vw / var(--aspect-ratio));
  max-width: var(--max-width);
  max-height: calc(var(--max-width) / var(--aspect-ratio));
}

.preview a img {
  width: 100%;
  transition-duration: var(--max-transition-duration);
}

.preview .details {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  position: absolute;
  top: 0;
  opacity: 0;
  transform: translateY(var(--negative-animation-height));
  padding: var(--default-spacing);
  padding-bottom: calc(var(--default-spacing) * 10);
  width: calc(100% - var(--default-spacing) * 2);
  color: rgb(var(--black));
  background: linear-gradient(0deg, rgba(var(--white), 0) 0%, rgba(var(--white), var(--mid-opacity)) 100%);
  transition-duration: var(--max-transition-duration);
}

.preview a:hover .details {
  opacity: 1;
  transform: translateY(0);
  transition-duration: var(--min-transition-duration);
}

.preview .details .title {
  font-weight: var(--bold-font-weight);
  border-bottom: var(--border);
  border-color: rgba(var(--black), var(--min-opacity));
}

.preview.desaturated {
  filter: grayscale(100%);
}

.preview.focused a img {
  transform: scale(1.05);
}

/* Contact */

.portrait {
  display: flex;
  background-color: rgb(var(--light-gray));
  border-radius: 50%;
  width: 40%;
  margin: 1.5em auto 1em;
}

/* Ensure portrait placeholder height is the same as width */
.portrait:before {
  content: "";
  display: block;
  padding-top: 100%;
}

.portrait img {
  width: 100%;
  height: 100%;
}

.contact {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  font-size: var(--larger-font-size);
  text-align: center;
}

.contact a {
  position: relative;
  display: block;
  margin-bottom: .5em;
  padding: .2em .4em;
}

.contact a svg {
  position: relative;
  width: 1em;
  height: 1em;
  top: .1em;
  left: -.1em;
  fill: rgb(var(--green));
}

/* Gallery */

.carousel {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  background-color: rgb(var(--white));
}

.carousel button {
  display: flex;
  justify-content: center;
  align-items: center;
  background: none;
  border: none;
  padding: var(--item-padding);
  margin: var(--item-padding);
  cursor: pointer;
}

.carousel #close-button {
  position: absolute;
  top: 0;
  right: 0;
  background-color: rgba(var(--white), var(--max-opacity));
}

.carousel button:hover,
.carousel button:focus {
  outline: none;
}

.carousel button svg {
  transition-duration: var(--max-transition-duration);
}

.carousel button:hover svg,
.carousel button:focus svg {
  transition-duration: var(--min-transition-duration);
  fill: rgb(var(--green));
}

.carousel button:disabled {
  background: none; 
  cursor: default;
}

.carousel button svg {
  width: var(--default-icon-size);
  height: var(--default-icon-size);
  fill: rgb(var(--black));
}

.carousel button:disabled svg {
  fill: rgb(var(--light-gray));
}

.gallery {
  display: flex;
  flex-flow: column nowrap;
}

.slider {
  --max-width: 80vw;
  --max-height: 80vh;

  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--max-width);
  height: calc(var(--max-width) / var(--aspect-ratio));
  max-height: var(--max-height);
  max-width: calc(var(--max-height) * var(--aspect-ratio));
  outline: none;
}

.slider:focus img {
  box-shadow: var(--focus-box-shadow);
  outline: none;
}

.slider div {
  outline: none;
}

.slide {
  /* TODO Consider migrating to gallery that supports offscreen whitespace between slides, e.g. Flickity */
  padding: 0 2px;
  cursor: grab;
}

.dot-group {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
}

.dot-group button {
  padding: 0;
  margin: 0;
}

.dot-group button:disabled svg {
  fill: rgb(var(--green));
}

/* Adaptive styles for touch devices */

@media (hover: none) {

  .preview .details {
    position: static;
    opacity: 1;
    transform: none;
    padding-top: 1em;
    padding-bottom: 1em;
  }

  .preview.focused a img {
    transform: none;
  }

  .carousel {
    /* Fix iOS viewport bug */
    height: -webkit-fill-available;
  }
}

/* Adaptive styles for smaller screens and windows */

@media only screen and (max-width: 150vh) { /* Must be the same as --previews-max-width */

  .preview.medium {
    --previews-max-width: 100vw;
  }
}

@media only screen and (max-width: 996px) {

  :root {
    --default-max-width: 996px;
  }

  nav > div, main > h1, main > p, .contact, footer {
    padding-right: var(--default-spacing);
    padding-left: var(--default-spacing);
  }

  .preview.medium {
    --max-width: var(--previews-max-width);
  }

  .carousel.vertical .back-button,
  .carousel.vertical .next-button {
    display: none;
  }

  .slider {
    --max-width: 100vw;
    --max-height: 85vh;
  }

  .carousel.horizontal .dot-group {
    display: none;
  }
}

@media only screen and (max-width: 720px) {

  :root {
    --smaller-font-size: 16px;
    --large-font-size: var(--larger-font-size);
  }

  nav.maximized {
    height: 100%;
    overflow: auto;
    background-color: rgb(var(--white));
  }

  nav > div {
    flex-wrap: wrap;
  }

  .logo, .language-menu {
    width: 100%;
  }

  .logo svg {
    display: initial;
  }

  main.previews {
    font-size: var(--smaller-font-size);
  }

  .main-menu {
    flex-direction: column;
  }

  .main-menu.maximized, .language-menu.maximized {
    opacity: 1;
  }

  .main-menu.minimized, .language-menu.minimized {
    visibility: hidden;
    opacity: 0;
  }

  .main-menu li div {
    padding: var(--item-padding) 0;
  }

  .language-menu {
    margin-top: 1em;
  }

  .language-menu li div {
    left: var(--item-position);
    padding: var(--item-padding);
  }
}
